//
//  EmailComposerViewController.m
//  ElectoralExperiment
//
//  Created by Stefan Agapie on 3/30/12.
//  Copyright 2011 Stefan Agapie. All rights reserved.
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.

//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.

//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//

#import "EmailComposerViewController.h"
#import "PluralitySpreadsheetGenerator.h"
#import "RangeSpreadsheetGenerator.h"
#import "IRVSpreadsheetGenerator.h"
#import "ApprovalSpreadsheetGenerator.h"

@interface EmailComposerViewController ()

@property (nonatomic, retain) MFMailComposeViewController *picker;

@end

@implementation EmailComposerViewController
@synthesize toTextField;
@synthesize ccTextField;
@synthesize bccTextField;
@synthesize picker = _picker;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
                
    }
    return self;
}

- (void)viewDidAppear:(BOOL)animated
{
    // generate spreadsheets data files //
    [PluralitySpreadsheetGenerator generatePluralitySreadsheetDataSet];
    [RangeSpreadsheetGenerator generateRangeSpreadsheetDataSet];
    [IRVSpreadsheetGenerator generateIRVSpreadsheetDataSets];
    [ApprovalSpreadsheetGenerator generateApprovalSpreadsheetDataSets];
    
    if ([MFMailComposeViewController canSendMail]) {
        [self displayComposerSheet];
    } else {
        [self.navigationController popViewControllerAnimated:YES];
    }   
}

-(void)displayComposerSheet 
{
    self.picker.mailComposeDelegate = self;
    [self.picker setSubject:@"Voting Experiment Data Sets."];
    //[self.picker setToRecipients:[NSArray arrayWithObject:self.toTextField.text]];
    //[self.picker setCcRecipients:[NSArray arrayWithObject:self.ccTextField.text]];
    //[self.picker setBccRecipients:[NSArray arrayWithObject:self.bccTextField.text]];
    
    
    // get filepath for Plurality data set //
    NSString *filepath;
    NSData *fileData;
    
    NSArray *fileNamesArray = [NSArray arrayWithObjects:
                               kPluralityDataFileName,
                               kPluralityStatsFileName,
                               kApprovalDataFileName,
                               kApprovalYayStatsFileName,
                               kApprovalNayStatsFileName,
                               kRangeDataFileName, 
                               kRangeStatsFileName,
                               kIRVdataFileName, 
                               kIRVstatsCat1FileName, 
                               kIRVstatsCat2FileName, 
                               kIRVstatsCat3FileName,
                               kPluralityMessagesFileName,
                               kApprovalMessagesFileName,
                               kRangeMessagesFileName,
                               kIRVMessagesFileName,
                               kPluralitySpreadsheetDataSetFilename,
                               kRangeSpreadsheetDataSetFilename,
                               kIRVSpreadsheetDataSetFilename,
                               kApprovalSpreadsheetDataSetFilename,
                               kUserDemographicDataBaseName,nil];
    
    for (NSString *filename in fileNamesArray) {
        filepath = [FileHandle getFilePathForFileWithName:filename];
        fileData = [NSData dataWithContentsOfFile:filepath];
        if (fileData) {
            [self.picker addAttachmentData:fileData mimeType:@"text/data" fileName:filename];
        }        
    }    
    
    /*
    // Attach an image to the email
    UIImage *coolImage = [UIImage imageNamed:@"redButton"];
    NSData *myData = UIImagePNGRepresentation(coolImage);
    [self.picker addAttachmentData:myData mimeType:@"image/png" fileName:@"redButton.png"];
     */

    
    // Fill out the email body text
    NSString *emailBody = @"Below are the data files that were generated by the OWS voting experiment.";
    [self.picker setMessageBody:emailBody isHTML:NO];
    [self presentModalViewController:self.picker animated:YES];
}

- (void)mailComposeController:(MFMailComposeViewController*)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError*)error 
{   
    // Notifies users about errors associated with the interface
    NSString *userMessage;
    switch (result)
    {
        case MFMailComposeResultCancelled:
            //NSLog(@"Result: canceled");
            userMessage = @"Result: canceled";
            break;
        case MFMailComposeResultSaved:
            //NSLog(@"Result: saved");
            userMessage = @"Resutl: saved";
            break;
        case MFMailComposeResultSent:
            //NSLog(@"Result: sent");
            userMessage = @"Result: sent";
            break;
        case MFMailComposeResultFailed:
            //NSLog(@"Result: failed");
            userMessage = @"Result: failed";
            break;
        default:
            //NSLog(@"Result: not sent");
            userMessage = @"Result: not sent";
            break;
    }
    
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Email Client Notice." message:userMessage delegate:self cancelButtonTitle:@"Great." otherButtonTitles: nil];
    [alert show];
    [alert release];
    
    [self dismissModalViewControllerAnimated:YES];
    [self.navigationController popViewControllerAnimated:YES];
}

- (void)viewDidLoad
{
    self.title = @"Email Client";
    
    self.picker = [[MFMailComposeViewController alloc] init];
    
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
}

- (void)viewDidUnload
{
    [self setToTextField:nil];
    [self setCcTextField:nil];
    [self setBccTextField:nil];
    [self setPicker:nil];
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
	return YES;
}

- (void)dealloc {
    [toTextField release];
    [ccTextField release];
    [bccTextField release];
    [_picker release];
    [super dealloc];
}

- (IBAction)composeEmailButton:(id)sender {
    
    [self displayComposerSheet];
}

@end
